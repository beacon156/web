
public class WebServiceClient {
    // 测试地址
//    public final static String urlString = "";
    /**
     * 正式地址
     */
    public final static String urlString = "";

    public static Boolean createReceipt(List<WsOrderVo> list, String end){
        try {
            URL url = new URL(urlString);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("content-type", "text/xml;charset=utf-8");
            connection.setDoInput(true);
            connection.setDoOutput(true);
            connection.setReadTimeout(3600000);
            // 组织数据并发送
            String soapXML = getXML(list);
            OutputStream os = connection.getOutputStream();
            os.write(soapXML.getBytes());
            //接收服务端响应
            int responseCode = connection.getResponseCode();
            if (200 == responseCode) {
                //表示服务端响应成功
                InputStream is = connection.getInputStream();

                // 解析响应
                SAXReader reader = new SAXReader();
                Document document = reader.read(is);
                Element root = document.getRootElement();
                Element soapBody = root.element("Body");
                Element createReceiptResponse = soapBody.element("CreateReceiptResponse");
                Element createReceiptResult = createReceiptResponse.element("CreateReceiptResult");
                String result = createReceiptResult.getText();
                Document doc = DocumentHelper.parseText(result);
                Element resultRoot = doc.getRootElement();
                Element statusEle = resultRoot.element("status");
                Element msg = resultRoot.element("msg");
                //获取状态值
                String status = statusEle.getText();
                String message = msg.getText();
                // 记录日志
                writeLog(end+"---接口调用返回值："+status + ",message:" + message);
                is.close();
                os.close();
                if ("00".equals(status)) {
                    return Boolean.TRUE;
                } else {
                    return Boolean.FALSE;
                }
            } else {
                InputStream errorStream = connection.getErrorStream();
                byte[] b = new byte[1024];
                String a = "";
                while ((errorStream.read(b))!=-1) {
                    a+= new String(b);
                }
                // 记录日志
                writeLog(end+"---访问失败："+a);
                os.close();
                errorStream.close();
                return Boolean.FALSE;
            }
        } catch (Exception e) {
            // 记录日志
            writeLog(end+"---exception:"+e.getMessage());
        }
        return Boolean.FALSE;
    }

    public static String getXML(List<WsOrderVo> list) {
        StringBuilder soap = new StringBuilder();
        soap.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
        soap.append("<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">");
        soap.append("<soap:Body>");
        soap.append("<CreateReceipt xmlns=\"http://tempuri.org/\">");
        soap.append("<xml>");
        soap.append("<![CDATA[");
        soap.append("<Root>");
        list.forEach(order->{
            soap.append("<Receipt>");
            soap.append("<OrderId>").append(order.getOrderId()).append("</OrderId>");
            soap.append("<StoreId>").append(order.getStoreId()).append("</StoreId>");
            soap.append("<CreatedDate>").append(order.getCreateDate()).append("</CreatedDate>");
            soap.append("<TotalQty>").append(order.getTotalQty()).append("</TotalQty>");
            soap.append("<SkuId>").append(order.getSkuId()).append("</SkuId>");
            soap.append("<Qr>").append(order.getQr()).append("</Qr>");
            soap.append("<QrType>").append(order.getQrType()).append("</QrType>");
            soap.append("<Qty>").append(order.getQty()).append("</Qty>");
            soap.append("</Receipt>");
        });
        soap.append("</Root>");
        soap.append("]]>");
        soap.append("</xml>");
        soap.append("<uid>");
        soap.append("QT");
        soap.append("</uid>");
        soap.append("<pwd>");
        soap.append("CoreStore");
        soap.append("</pwd>");
        soap.append("</CreateReceipt>");
        soap.append("</soap:Body>");
        soap.append("</soap:Envelope>");
        System.out.println(soap.toString());
        return soap.toString();
    }

    public static void writeLog(String message){
        OutputStream missingOut = null;
//        File dir = new File(PropertiesUtils.baseProperties.get("temp_url"));
        File dir = new File("F:/temp");
        try {
            // 丢失日志文件
            File missingLog = new File(dir + "/webservice_log.log");
            if (!missingLog.exists()) {
                missingLog.createNewFile();
            }
            missingOut = new FileOutputStream(missingLog,true);
            missingOut.write(message.getBytes());
            // 测试用
            missingOut.write("\r".getBytes());
            missingOut.write("\n".getBytes());
            missingOut.flush();
        } catch (Exception e1) {
            e1.printStackTrace();
        } finally {
            try {
                missingOut.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
